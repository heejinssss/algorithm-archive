-- 02. 매출 분석
SELECT COUNT(ORDER_NO) AS 총주문건,
       SUM(SALES) AS 총매출합계,
       ROUND(AVG(SALES)) AS 평균매출,
       MAX(SALES) AS 최고매출,
       MIN(SALES) AS 최저매출
FROM ORDER_INFO;

-- 03. 매출 비교 분석
SELECT (SELECT COUNT(*)
        FROM ORDER_INFO) AS 총주문건수,
       (SELECT SUM(SALES)
        FROM ORDER_INFO) AS 총매출합계,
        COUNT(R.RESERV_NO) AS 온라인전용상품주문건수,
        SUM(O.SALES) AS 온라인전용상품매출합계,
        ROUND(100*COUNT(R.RESERV_NO)/(SELECT COUNT(*) FROM ORDER_INFO),2) AS 주문건수비율,
        ROUND(100*SUM(O.SALES)/(SELECT SUM(SALES) FROM ORDER_INFO),2) AS 매출합계비율
FROM RESERVATION R, ORDER_INFO O, ITEM I
WHERE R.RESERV_NO = O.RESERV_NO
  AND O.ITEM_ID = I.ITEM_ID
  AND I.PRODUCT_DESC = '온라인_전용상품'
GROUP BY '총주문건수', '총매출합계';

-- 04. 상품별 매출 분석
SELECT I.ITEM_ID AS ITEM_ID,
       I.PRODUCT_NAME AS PRODUCT_NAME,
       SUM((O.QUANTITY)*(I.PRICE)) AS 매출합계
FROM ORDER_INFO O, ITEM I
WHERE O.ITEM_ID = I.ITEM_ID
GROUP BY I.ITEM_ID, I.PRODUCT_NAME
ORDER BY SUM(SALES) DESC;

-- 05. 월별 상품 매출 분석 (리팩토링 필요)
SELECT SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6) AS 년월,
       NVL(SUM(DECODE(I.PRODUCT_NAME, 'SPECIAL_SET', SALES)), 0) AS SPECIAL_SET,
       NVL(SUM(DECODE(I.PRODUCT_NAME, 'PASTA', SALES)), 0) AS PASTA,
       NVL(SUM(DECODE(I.PRODUCT_NAME, 'PIZZA', SALES)), 0) AS PIZZA,
       NVL(SUM(DECODE(I.PRODUCT_NAME, 'STEAK', SALES)), 0) AS STEAK,
       NVL(SUM(DECODE(I.PRODUCT_NAME, 'SALAD_BAR', SALES)), 0) AS SALAD_BAR,
       NVL(SUM(DECODE(I.PRODUCT_NAME, 'SALAD', SALES)), 0) AS SALAD,
       NVL(SUM(DECODE(I.PRODUCT_NAME, 'SANDWICH', SALES)), 0) AS SANDWICH,
       NVL(SUM(DECODE(I.PRODUCT_NAME, 'WINE', SALES)), 0) AS WINE,
       NVL(SUM(DECODE(I.PRODUCT_NAME, 'JUICE', SALES)), 0) AS JUICE
FROM RESERVATION R, ORDER_INFO O, ITEM I
WHERE O.ITEM_ID = I.ITEM_ID
  AND R.RESERV_NO = O.RESERV_NO
GROUP BY SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6)
ORDER BY SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6);

-- 06. 월별 총 매출, 전용 상품 매출 분석
SELECT SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6) AS 년월,
       NVL(SUM(DECODE(I.PRODUCT_NAME, I.PRODUCT_NAME, SALES)), 0) AS 매출합계,
       NVL(SUM(DECODE(I.PRODUCT_NAME, 'SPECIAL_SET', SALES)), 0) AS SPECIAL_SET
FROM RESERVATION R, ORDER_INFO O, ITEM I
WHERE O.ITEM_ID = I.ITEM_ID
  AND R.RESERV_NO = O.RESERV_NO
GROUP BY SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6)
ORDER BY SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6);

-- 07. 매출 기여율
SELECT SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6) AS 년월,
       SUM(DECODE(I.PRODUCT_NAME, I.PRODUCT_NAME, SALES)) - SUM(DECODE(I.PRODUCT_NAME, 'SPECIAL_SET', SALES)) AS ETC,
       NVL(SUM(DECODE(I.PRODUCT_NAME, 'SPECIAL_SET', SALES)), 0) AS SPECIAL_SET,
       ROUND(100*SUM(DECODE(I.PRODUCT_NAME, 'SPECIAL_SET', SALES))/SUM(DECODE(I.PRODUCT_NAME, I.PRODUCT_NAME, SALES)), 1) AS 매출기여율
FROM RESERVATION R, ORDER_INFO O, ITEM I
WHERE O.ITEM_ID = I.ITEM_ID
  AND R.RESERV_NO = O.RESERV_NO
GROUP BY SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6)
ORDER BY SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6);

-- 08. 예약 완료/취소건 분석
-- WITH절로 년월별 예약 취소건 테이블 생성
WITH
CNT AS (SELECT SUBSTR(TO_CHAR(RESERV_DATE, '00000000'), 2, 6) AS YM, COUNT(CANCEL) AS CANCEL
        FROM RESERVATION
        WHERE CANCEL = 'Y'
        GROUP BY SUBSTR(TO_CHAR(RESERV_DATE, '00000000'), 2, 6))
SELECT SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6) AS 년월,
       SUM(DECODE(I.PRODUCT_NAME, I.PRODUCT_NAME, SALES)) - SUM(DECODE(I.PRODUCT_NAME, 'SPECIAL_SET', SALES)) AS ETC,
       NVL(SUM(DECODE(I.PRODUCT_NAME, 'SPECIAL_SET', SALES)), 0) AS SPECIAL_SET,
       ROUND(100*SUM(DECODE(I.PRODUCT_NAME, 'SPECIAL_SET', SALES))/SUM(DECODE(I.PRODUCT_NAME, I.PRODUCT_NAME, SALES)), 1) AS 매출기여율,
       CNT.CANCEL + COUNT(*) AS 총주문건,
       COUNT(*) AS 예약완료건,
       CNT.CANCEL AS 예약취소건
FROM CNT, RESERVATION R, ORDER_INFO O, ITEM I
WHERE O.ITEM_ID = I.ITEM_ID
  AND R.RESERV_NO = O.RESERV_NO
  AND CNT.YM = SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6)
GROUP BY SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6), CNT.CANCEL
ORDER BY SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6);

-- 09. 월별 취소율 추이 분석
WITH
CNT AS (SELECT SUBSTR(TO_CHAR(RESERV_DATE, '00000000'), 2, 6) AS YM, COUNT(CANCEL) AS CANCEL
        FROM RESERVATION
        WHERE CANCEL = 'Y'
        GROUP BY SUBSTR(TO_CHAR(RESERV_DATE, '00000000'), 2, 6))
SELECT SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6) AS 년월,
       CNT.CANCEL + COUNT(*) AS 총주문건,
       COUNT(*) AS 예약완료건,
       CNT.CANCEL AS 예약취소건,
       CONCAT((ROUND(100*CNT.CANCEL/(CNT.CANCEL + COUNT(*)), 1)), '%') AS 예약취소율
FROM CNT, RESERVATION R, ORDER_INFO O, ITEM I
WHERE O.ITEM_ID = I.ITEM_ID
  AND R.RESERV_NO = O.RESERV_NO
  AND CNT.YM = SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6)
GROUP BY SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6), CNT.CANCEL
ORDER BY SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6);

-- 10. 요일별 매출 분석
-- 전용상품의 데이터는 예약정보, 주문정보, 상품정보 3개의 테이블을 조인하여 인라인 뷰 영역으로 지정
-- 인라인 뷰 영역을 서브쿼리로 테이블처럼 사용
-- 요일별 건수 합계를 계산하고, 일자순으로 정렬
SELECT SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6) AS 년월,
       I.PRODUCT_NAME AS 상품명,
       NVL(SUM(DECODE(TO_CHAR(TO_DATE(R.RESERV_DATE), 'DAY'), '일요일', SALES)), 0) AS 일요일,
       NVL(SUM(DECODE(TO_CHAR(TO_DATE(R.RESERV_DATE), 'DAY'), '월요일', SALES)), 0) AS 월요일,
       NVL(SUM(DECODE(TO_CHAR(TO_DATE(R.RESERV_DATE), 'DAY'), '화요일', SALES)), 0) AS 화요일,
       NVL(SUM(DECODE(TO_CHAR(TO_DATE(R.RESERV_DATE), 'DAY'), '수요일', SALES)), 0) AS 수요일,
       NVL(SUM(DECODE(TO_CHAR(TO_DATE(R.RESERV_DATE), 'DAY'), '목요일', SALES)), 0) AS 목요일,
       NVL(SUM(DECODE(TO_CHAR(TO_DATE(R.RESERV_DATE), 'DAY'), '금요일', SALES)), 0) AS 금요일,
       NVL(SUM(DECODE(TO_CHAR(TO_DATE(R.RESERV_DATE), 'DAY'), '토요일', SALES)), 0) AS 토요일
FROM (SELECT RESERV_NO, RESERV_DATE FROM RESERVATION) R,
     (SELECT RESERV_NO, ITEM_ID, SALES, QUANTITY FROM ORDER_INFO) O,
     (SELECT ITEM_ID, PRODUCT_NAME, PRICE FROM ITEM WHERE PRODUCT_NAME = 'SPECIAL_SET') I
WHERE O.ITEM_ID = I.ITEM_ID
  AND R.RESERV_NO = O.RESERV_NO
GROUP BY SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6), I.PRODUCT_NAME
ORDER BY SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6);

-- 11(1). 월별 전용 상품 실적 순위 분석
SELECT *
FROM (SELECT SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6) AS 년월,
             R.BRANCH AS 지점,
             SUM(SALES) AS 매출액,
             RANK() OVER(PARTITION BY SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6)
                         ORDER BY SUM(SALES) DESC) AS RANK
      FROM RESERVATION R, ORDER_INFO O, ITEM I
      WHERE R.RESERV_NO = O.RESERV_NO
        AND I.PRODUCT_NAME = 'SPECIAL_SET'
        AND O.ITEM_ID = I.ITEM_ID
      GROUP BY SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6), R.BRANCH) E
WHERE E.RANK >= 1 AND E.RANK <= 3
ORDER BY E.년월, E.RANK, E.지점 DESC;

-- 11(2). 월별 전용 상품 실적 순위 분석
SELECT *
FROM (SELECT SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6) AS 년월,
             R.BRANCH AS 지점,
             SUM(SALES) AS 매출액,
             ROW_NUMBER() OVER(PARTITION BY SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6)
                         ORDER BY SUM(SALES) DESC) AS RANK
      FROM RESERVATION R, ORDER_INFO O, ITEM I
      WHERE R.RESERV_NO = O.RESERV_NO
        AND I.PRODUCT_NAME = 'SPECIAL_SET'
        AND O.ITEM_ID = I.ITEM_ID
      GROUP BY SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6), R.BRANCH) E
WHERE E.RANK = 1
ORDER BY E.년월, E.RANK, E.지점 DESC;

-- 12. 종합 리포트 (리팩토링 필요)
SELECT 매출월, MAX(총매출), MAX(전용상품외매출), MAX(전용상품매출), MAX(전용상품판매율), MAX(총예약건), MAX(예약완료건), MAX(예약취소건), MAX(예약취소율), MAX(최대매출지점), MAX(지점매출액)
FROM (SELECT 매출월, 총매출, 전용상품외매출, 전용상품매출, 전용상품판매율, 총예약건, 예약완료건, 예약취소건, 예약취소율, 최대매출지점, 지점매출액
      FROM (SELECT TO_CHAR(SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6)) AS 매출월,
                   TO_CHAR(SUM(SALES)) AS 총매출,
                   TO_CHAR(SUM(DECODE(I.PRODUCT_NAME, I.PRODUCT_NAME, SALES)) - SUM(DECODE(I.PRODUCT_NAME, 'SPECIAL_SET', SALES))) AS 전용상품외매출,
                   TO_CHAR(NVL(SUM(DECODE(I.PRODUCT_NAME, 'SPECIAL_SET', SALES)), 0)) AS 전용상품매출,
                   TO_CHAR(CONCAT(ROUND(100*SUM(DECODE(I.PRODUCT_NAME, 'SPECIAL_SET', SALES))/SUM(DECODE(I.PRODUCT_NAME, I.PRODUCT_NAME, SALES)), 1), '%')) AS 전용상품판매율,
                   TO_CHAR(CNT.CANCEL + COUNT(*)) AS 총예약건,
                   TO_CHAR(COUNT(*)) AS 예약완료건,
                   TO_CHAR(CNT.CANCEL) AS 예약취소건,
                   TO_CHAR(CONCAT((ROUND(100*CNT.CANCEL/(CNT.CANCEL + COUNT(*)), 1)), '%')) AS 예약취소율,
                   TO_CHAR(0) AS 최대매출지점,
                   TO_CHAR(0) AS 지점매출액,
                   TO_CHAR(ROW_NUMBER() OVER(PARTITION BY SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6)
                           ORDER BY SUM(SALES) DESC))
            FROM RESERVATION R, ORDER_INFO O, ITEM I,
                (SELECT SUBSTR(TO_CHAR(RESERV_DATE, '00000000'), 2, 6) AS YM, COUNT(CANCEL) AS CANCEL
                 FROM RESERVATION
                 WHERE CANCEL = 'Y'
                 GROUP BY SUBSTR(TO_CHAR(RESERV_DATE, '00000000'), 2, 6)) CNT
                 WHERE O.ITEM_ID = I.ITEM_ID
                   AND R.RESERV_NO = O.RESERV_NO
                   AND CNT.YM = SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6)
                 GROUP BY SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6), CNT.CANCEL
      ORDER BY SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6))
      UNION
      SELECT 매출월, 총매출, 전용상품외매출, 전용상품매출, 전용상품판매율, 총예약건, 예약완료건, 예약취소건, 예약취소율, 최대매출지점, 지점매출액
      FROM (SELECT TO_CHAR(SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6)) AS 매출월,
                   TO_CHAR(0) AS 총매출,
                   TO_CHAR(0) AS 전용상품외매출,
                   TO_CHAR(0) AS 전용상품매출,
                   TO_CHAR(0) AS 전용상품판매율,
                   TO_CHAR(0) AS 총예약건,
                   TO_CHAR(0) AS 예약완료건,
                   TO_CHAR(0) AS 예약취소건,
                   TO_CHAR(0) AS 예약취소율,
                   TO_CHAR(R.BRANCH) AS 최대매출지점,
                   TO_CHAR(SUM(SALES)) AS 지점매출액,
                   TO_CHAR(ROW_NUMBER() OVER(PARTITION BY SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6)
                           ORDER BY SUM(SALES) DESC)) AS RNK
            FROM RESERVATION R, ORDER_INFO O, ITEM I
            WHERE R.RESERV_NO = O.RESERV_NO
              AND I.PRODUCT_NAME = 'SPECIAL_SET'
              AND O.ITEM_ID = I.ITEM_ID
            GROUP BY SUBSTR(TO_CHAR(R.RESERV_DATE, '00000000'), 2, 6), R.BRANCH)
      WHERE RNK = 1
      ORDER BY 매출월, 최대매출지점 DESC)
GROUP BY 매출월
ORDER BY 매출월;

-- 13. 고객 특징 분석 (CASE문 사용 가능?)
SELECT C.고객수 AS 고객수, M.남자 AS 남자, F.여자 AS 여자, ROUND(AVG(A.AGE), 2) AS 평균나이
FROM (SELECT COUNT(*) AS 고객수 FROM CUSTOMER) C,
     (SELECT COUNT(*) AS 남자 FROM CUSTOMER WHERE SEX_CODE = 'M') M,
     (SELECT COUNT(*) AS 여자 FROM CUSTOMER WHERE SEX_CODE = 'F') F,
     (SELECT (MONTHS_BETWEEN(TO_CHAR(SYSDATE, 'YYYYMMDD'), TO_DATE(BIRTH, 'YYYYMMDD'))/12) AS AGE FROM CUSTOMER) A
GROUP BY C.고객수, M.남자, F.여자;
-- 24/04/07
-- 19871104

-- 14. 개인별 매출 분석
SELECT T1.CUSTOMER_ID AS 고객아이디, T1.CUSTOMER_NAME AS 고객명, T1.CNT AS 전체상품주문건수, T1.MONEY AS 총매출,
       T2.CNT AS 전용상품주문건수, T2.MONEY AS 전용상품매출
FROM (SELECT C.CUSTOMER_ID AS CUSTOMER_ID, C.CUSTOMER_NAME AS CUSTOMER_NAME, COUNT(O.ORDER_NO) AS CNT, SUM(O.SALES) AS MONEY
      FROM CUSTOMER C, RESERVATION R, ORDER_INFO O
      WHERE C.CUSTOMER_ID = R.CUSTOMER_ID
      AND R.RESERV_NO = O.RESERV_NO
      GROUP BY C.CUSTOMER_ID, C.CUSTOMER_NAME
      ORDER BY C.CUSTOMER_ID) T1,
     (SELECT C.CUSTOMER_ID AS CUSTOMER_ID, C.CUSTOMER_NAME AS CUSTOMER_NAME, COUNT(O.ORDER_NO) AS CNT, SUM(O.SALES) AS MONEY
      FROM CUSTOMER C, RESERVATION R, ORDER_INFO O, ITEM I
      WHERE C.CUSTOMER_ID = R.CUSTOMER_ID
      AND R.RESERV_NO = O.RESERV_NO
      AND O.ITEM_ID = I.ITEM_ID
      AND I.PRODUCT_NAME = 'SPECIAL_SET'
      GROUP BY C.CUSTOMER_ID, C.CUSTOMER_NAME
      ORDER BY C.CUSTOMER_ID) T2
WHERE T1.CUSTOMER_ID = T2.CUSTOMER_ID;

-- 15. 상위 매출 기준 10위 고객
SELECT T.CUSTOMER_ID AS 고객아이디, T.CUSTOMER_NAME AS 고객명, T.MONEY AS 전용상품매출, T.RANK AS 순위
FROM (SELECT C.CUSTOMER_ID AS CUSTOMER_ID, C.CUSTOMER_NAME AS CUSTOMER_NAME, COUNT(O.ORDER_NO) AS CNT, SUM(O.SALES) AS MONEY,
      ROW_NUMBER() OVER(ORDER BY SUM(O.SALES) DESC) AS RANK
      FROM CUSTOMER C, RESERVATION R, ORDER_INFO O, ITEM I
      WHERE C.CUSTOMER_ID = R.CUSTOMER_ID
      AND R.RESERV_NO = O.RESERV_NO
      AND O.ITEM_ID = I.ITEM_ID
      AND I.PRODUCT_NAME = 'SPECIAL_SET'
      GROUP BY C.CUSTOMER_ID, C.CUSTOMER_NAME
      ORDER BY C.CUSTOMER_ID) T
WHERE RANK >= 1 AND RANK <= 10
ORDER BY T.RANK;